package be6_Java_Algorithms;

public class Long_Same_Prefix {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Longest Same Prefix");
		String[] stringArray = {"flower", "flow", "flight"};
		printArray(stringArray);
		System.out.println(stringArray[0]);
		char firstChar = stringArray[0].charAt(1);
		System.out.println(firstChar);
		
		// Initialize the common prefix with the first string
		String commonPrefix = stringArray[0];

		// Iterate through the rest of the strings to find the common prefix
		for (int i = 1; i < stringArray.length; i++) {
		    String currentString = stringArray[i];
		    int j = 0;
		    // Compare characters of the current string with the common prefix
		    while (j < commonPrefix.length() && j < currentString.length() && commonPrefix.charAt(j) == currentString.charAt(j)) {
		        j++;
		    }
//		    // Update the common prefix to the matched portion
		    commonPrefix = commonPrefix.substring(0, j);
//		}
		
		
		System.out.println("Common Prefix: " + commonPrefix);
	}
	
	
	
	public static void printArray(String[] array) {
        // Iterate through the array and print each element
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + ", ");
        }
        System.out.println(); // Print a newline after printing all elements
    }
}
